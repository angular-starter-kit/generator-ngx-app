<% const run = command => `${props.packageManager} run ${command}${props.packageManager === 'npm' ? ' -s' : ''}` -%>
{
  "name": "<%= props.projectName %>",
  "version": "1.0.0",
  "private": true,
  <% if (props.target.includes('electron')) { -%>
     "main": "electron.main.js",
  <% } -%>
  "scripts": {
    "ng": "ng",
    "build": "<%= run('env') %> && ng build --prod",
    "start": "<%= run('env') %> && ng serve --proxy-config proxy.conf.js",
<% if (props.pwa) { -%>
    "serve:sw": "<%= run('build') %> && npx http-server ./<%= props.target.includes('cordova') ? 'www': 'dist' %> -p 4200",
<% } -%>
    "lint": "ng lint && stylelint \"src/**/*.scss\" --syntax scss && htmlhint \"src\" --config .htmlhintrc",
    "test": "<%= run('env') %> && ng test",
    "test:ci": "<%= run('env') %> && <%= run('lint') %> && ng test --configuration=ci",
    "e2e": "<%= run('env') %> && ng e2e",
    "translations:extract": "ngx-translate-extract --input ./src --output ./src/translations/template.json --format=json --clean --sort --marker extract",
<% if (props.tools.includes('hads')) { -%>
    "docs": "hads ./docs -o",
<% } -%>
<% if (props.tools.includes('compodoc')) { -%>
    "compodoc": "compodoc -p tsconfig.app.json -d docs/generated -s -o",
<% } -%>
    "env": "ngx-scripts env npm_package_version",
<% if (props.tools.includes('prettier')) { -%>
    "prettier": "prettier --write \"./{src,e2e}/**/*.{ts,js,html,scss}\"",
    "prettier:check": "prettier --list-different \"./{src,e2e}/**/*.{ts,js,html,scss}\"",
    "postinstall": "<%= run('prettier') %>",
<% } -%>
<% if (props.target.includes('cordova')) { -%>
    "cordova:prepare": "ngx-scripts cordova prepare",
    "cordova:run": "ngx-scripts cordova run",
    "cordova:build": "ngx-scripts cordova build --device --release --copy dist",
    "cordova:clean": "ngx-scripts clean",
    "cordova": "cordova",
<% } -%>
<% if (props.target.includes('electron')) { -%>
    "electron:compile": "tsc --project tsconfig.electron.json",
    "electron:run": "<%= run('electron:compile') %> && electron .",
    "electron:build": "<%= run('electron:compile') %> && <%= run('env') %> && ng build --prod --base-href ./dist.electron --output-path dist.electron",
    "electron:package:common": "electron-packager . --overwrite --out=dist.packages --ignore=\"/(platforms|plugins|docs|www|reports|e2e|src)\"",
<%   if (props.desktop.includes('windows')) { -%>
    "electron:package:windows": "<%= run('electron:package:common') %> -- --platform=win32 --arch=x64 --icon=./resources/win/icon.ico",
<%   } -%>
<%   if (props.desktop.includes('mac')) { -%>
    "electron:package:mac": "<%= run('electron:package:common') %> -- --platform=darwin --icon=./resources/mac/icon.icns",
<%   } -%>
<%   if (props.desktop.includes('linux')) { -%>
    "electron:package:linux": "<%= run('electron:package:common') %> --platform=linux",
<%   } -%>
    "electron:package": "<%- props.desktop.reduce((out, platform) => (out ? out + ' && ' : '') + run('electron:package:' + platform), null) %>",
<% } -%>
    "generate": "ng generate"
  },
  "dependencies": {
    "@angular/animations": "^8.1.0",
    "@angular/common": "^8.1.0",
    "@angular/compiler": "^8.1.0",
    "@angular/core": "^8.1.0",
    "@angular/forms": "^8.1.0",
    "@angular/platform-browser": "^8.1.0",
    "@angular/platform-browser-dynamic": "^8.1.0",
    "@angular/router": "^8.1.0",
    "@ngx-translate/core": "^11.0.1",
<% if (props.target.includes('cordova')) { -%>
    "@ionic-native/core": "^5.0.0",
    "@ionic-native/keyboard": "^5.0.0",
    "@ionic-native/splash-screen": "^5.0.0",
    "@ionic-native/status-bar": "^5.0.0",
    "cordova-android": "^8.0.0",
    "cordova-custom-config": "^5.0.2",
    "cordova-ios": "^5.0.0",
    "cordova-plugin-device": "^2.0.2",
    "cordova-plugin-ionic-webview": "^4.0.1",
    "cordova-plugin-ionic-keyboard": "^2.1.3",
    "cordova-plugin-splashscreen": "^5.0.2",
    "cordova-plugin-statusbar": "^2.4.1",
    "cordova-plugin-whitelist": "^1.3.3",
<% } -%>
<% if (props.pwa) { -%>
    "@angular/service-worker": "^8.1.0",
<% } -%>
<% if (props.ui === 'ionic') { -%>
    "@ionic/angular": "^4.0.0",
<% } else if (props.ui === 'bootstrap') { -%>
    "@ng-bootstrap/ng-bootstrap": "^5.0.0-rc.1",
    "bootstrap": "^4.1.1",
    "@fortawesome/fontawesome-free": "^5.1.0",
<% } else if (props.ui === 'material') { -%>
    "@angular/cdk": "^8.0.2",
    "@angular/material": "^8.0.2",
    "@angular/flex-layout": "^8.0.0-beta.26",
    "material-design-icons-iconfont": "^5.0.1",
    "hammerjs": "^2.0.8",
<% } -%>
<% if (props.angulartics) { -%>
    "angulartics2": "^7.2.4",
<% } -%>
<% if (props.utility.includes('lodash')) { -%>
    "lodash": "^4.17.11",
<% } -%>
<% if (props.utility.includes('ramda')) { -%>
    "ramda": "^0.26.1",
<% } -%>
<% if (props.utility.includes('moment')) { -%>
    "moment": "^2.24.0",
<% } -%>
<% if (props.utility.includes('datefns')) { -%>
    "date-fns": "^1.30.1",
<% } -%>
    "rxjs": "^6.5.2",
    "zone.js": "^0.9.1"
  },
  "devDependencies": {
<% if (props.target.includes('cordova')) { -%>
    "cordova": "^9.0.0",
<% } -%>
<% if (props.tools.includes('jest')) { -%>
    "@angular-builders/jest": "^8.0.4",
<% } -%>
    "@angular/cli": "~8.1.0",
    "@angular/compiler-cli": "^8.1.0",
    "@angular/language-service": "^8.1.0",
    "@angular-devkit/build-angular": "^0.801.0",
    "@angularclass/hmr": "^2.1.3",
    "@biesbjerg/ngx-translate-extract": "^2.3.4",
    "@ngx-rocket/scripts": "^4.0.0",
    "@types/jasmine": "^3.3.13",
    "@types/jasminewd2": "^2.0.3",
<% if (props.tools.includes('jest')) { -%>
      "@types/jest": "^24.0.12",
<% } -%>
    "@types/node": "^10.9.0",
<% if (props.utility.includes('lodash')) { -%>
    "@types/lodash": "^4.14.112",
<% } -%>
<% if (props.utility.includes('ramda')) { -%>
    "@types/ramda": "^0.26.6",
<% } -%>
    "codelyzer": "^5.1.0",
<% if (props.target.includes('electron')) { -%>
    "electron": "^5.0.2",
    "electron-packager": "^13.0.1",
    "electron-reload": "^1.4.0",
<% } -%>
<% if (props.tools.includes('hads')) { -%>
    "hads": "^1.7.0",
<% } -%>
<% if (props.tools.includes('compodoc')) { -%>
    "@compodoc/compodoc": "^1.1.9",
<% } -%>
    "htmlhint": "^0.11.0",
    "https-proxy-agent": "^2.0.0",
    "jasmine-core": "~3.4.0",
    "jasmine-spec-reporter": "~4.2.1",
<% if (props.tools.includes('jest')) { -%>
    "jest": "^24.7.1",
    "jest-preset-angular": "^7.1.0",
<% } else { -%>
    "karma": "~4.2.0",
    "karma-chrome-launcher": "^3.0.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "^2.0.2",
    "karma-jasmine": "^2.0.1",
    "karma-jasmine-html-reporter": "^1.4.0",
    "karma-junit-reporter": "^1.2.0",
<% } -%>
<% if (props.tools.includes('prettier')) { -%>
    "prettier": "^1.16.3",
    "tslint-config-prettier": "^1.14.0",
    "stylelint-config-prettier": "^5.1.0",
<%   if (options.git) { -%>
    "pretty-quick": "^1.10.0",
    "husky": "^3.0.0",
<%   } -%>
<% } -%>
    "protractor": "~5.4.0",
<% if (!options['external-chrome']) { -%>
    "puppeteer": "^1.17.0",
<% } -%>
    "stylelint": "~10.1.0",
    "stylelint-config-recommended-scss": "~3.3.0",
    "stylelint-config-standard": "~18.3.0",
    "stylelint-scss": "~3.9.0",
    "ts-node": "^8.3.0",
    "tslint": "~5.18.0",
    "typescript": "~3.4.0"
<% if (props.tools.includes('prettier')) { -%>
  },
  "prettier": {
    "singleQuote": true,
    "overrides": [
      {
        "files": "*.scss",
        "options": {
          "singleQuote": false
        }
      }
    ]
<% } -%>
<% if (props.tools.includes('prettier') && options.git) { -%>
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
<% } -%>
<% if (props.target.includes('cordova')) { -%>
  },
  "cordova": {
    "platforms": [
      "android",
      "ios"
    ],
    "plugins": {
      "cordova-custom-config": {},
      "cordova-plugin-device": {},
      "cordova-plugin-splashscreen": {},
      "cordova-plugin-statusbar": {},
      "cordova-plugin-whitelist": {},
      "cordova-plugin-ionic-webview": {},
      "cordova-plugin-ionic-keyboard": {}
    }
<% } -%>
  }
}
